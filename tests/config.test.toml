title = "ICAPEG test configuration file"

[app]
log_level = "debug" # the log levels for tha app, available values: info-->logging the overall progress of the app, debug --> log everything including errors, error --> log infos and just errors
port = 1344
max_filesize = 10000000 #bytes
resp_scanner_vendor = "virustotal" # Supported vendors for respmod of ICAP: "virustotal", "metadefender" , "vmray" , "clamav" , "none"- none specifies, respmod will be bypassing everything
req_scanner_vendor = "vmray" # Supported vendors for reqmod of ICAP: "virustotal" , "vmray",
resp_scanner_vendor_shadow = "virustotal"
req_scanner_vendor_shadow = "vmray"
bypass_extensions = ["*"]
process_extensions = ["txt" , "pdf" , "dmg" , "exe" , "com", "rar" , "unknown"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
preview_bytes = "4096" #bytes
propagate_error = true


[icap_something]
base_url = "icap://127.0.0.1:1345"
reqmod_endpoint = "/remote-req"
respmod_endpoint = "/remote-resp"
options_endpoint = ""
timeout = 50# seconds, the whole allowed life span of an ICAP request

[icap_somethingelse]
base_url = "icap://127.0.0.1:1346"
reqmod_endpoint = "/remote-req"
respmod_endpoint = "/remote-resp"
options_endpoint = ""
timeout = 50# seconds, the whole allowed life span of an ICAP request


[virustotal]
base_url = "http://localhost:8001"
file_scan_endpoint = "/file/scan"
url_scan_endpoint = "/url/scan"
file_report_endpoint = "/file/report?apikey=%s&resource=%s"
url_report_endpoint = "/url/report?apikey=%s&resource=%s"
api_key = "12345abcd"
timeout  = 10 #seconds
fail_threshold = 2
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious"]
ok_file_status = ["ok"]


[metadefender]
base_url = "http://localhost:8002"
scan_endpoint = "/file"
report_endpoint = "/file"
api_key = "a1b2c3e4"
timeout  = 10 #seconds
fail_threshold = 2
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious"]
ok_file_status = ["ok"]


[vmray]
base_url = "http://localhost:8003"
submit_endpoint = "/sample/submit"
get_sample_endpoint= "/sample"
submission_status_endpoint = "/submission"
timeout = 10 #seconds , the timeout duration for all the api calls for vmray
status_check_interval = 2 #seconds, the time interval after which the submission status check will be called
status_check_timeout = 300 #seconds, the total time duration after which the the status check should be stopped, if not finished
bad_file_status = ["malicious", "suspicious", "blacklisted"]
ok_file_status = ["not_suspicious" , "whitelisted", "unknown"]
api_key = "abcd1234"



[clamav]
socket_path = "/var/run/clamav/clamd.ctl"
wait_timeout = 10 #seconds, the time upto which the server will wait for clamav to scan the results
bad_file_status = ["malicious"]
ok_file_status = ["ok"]
